buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
    }
    maven { // Registrate
        url "https://maven.tterrag.com/"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = 'GeckoLib'
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name = "Illusive Soulworks maven"
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    runtimeOnly fg.deobf("curse.maven:jei-238222:5846864")

    implementation fg.deobf("curse.maven:vault-hunters-official-mod-458203:5925633")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:autoreglib-250363:3642382")
    implementation fg.deobf("curse.maven:quark-243121:3840125")
    compileOnly(fg.deobf("top.theillusivec4.curios:curios-forge:${minecraft_version}-5.0.9.0:api"))

    runtimeOnly(fg.deobf("top.theillusivec4.curios:curios-forge:${minecraft_version}-5.0.9.0"))
    implementation fg.deobf("curse.maven:geckolib-388172:4181370")

    implementation fg.deobf("curse.maven:vault-hunters-official-mod-458203:5925633")

    runtimeOnly fg.deobf("curse.maven:refined-storage-243076:4217424")
    runtimeOnly fg.deobf("curse.maven:mekanism-268560:3875976")
    runtimeOnly fg.deobf("curse.maven:loot-beams-506757:3879829")
    runtimeOnly fg.deobf("curse.maven:xaeros-minimap-263420:4181105")
    runtimeOnly fg.deobf("curse.maven:xaeros-world-map-317780:4193007")
    runtimeOnly fg.deobf("curse.maven:sophisticated-core-618298:4489807")
    runtimeOnly fg.deobf("curse.maven:sophisticated-backpacks-422301:4515363")
    runtimeOnly fg.deobf("curse.maven:sophisticated-backpacks-vault-hunters-edition-696425:4287544")
    runtimeOnly fg.deobf("curse.maven:ecologics-570463:4171283")
    runtimeOnly fg.deobf("curse.maven:compressium-342929:4034865")
    runtimeOnly fg.deobf("curse.maven:architects-palette-433862:4498424")
    runtimeOnly fg.deobf("curse.maven:easy-villagers-400514:3887794")
    runtimeOnly fg.deobf("curse.maven:easy-piglins-419372:3798287")
    runtimeOnly fg.deobf("curse.maven:supplementaries-412082:4548315")
    runtimeOnly fg.deobf("curse.maven:selene-499980:3842421")
    runtimeOnly fg.deobf("curse.maven:cagerium-709608:4435767")
    runtimeOnly fg.deobf("curse.maven:shutup-experimental-settings-407174:3759881")
    runtimeOnly fg.deobf("curse.maven:alexs-mobs-426558:3853078")
    runtimeOnly fg.deobf("curse.maven:citadel-331936:3783096")
    runtimeOnly fg.deobf("curse.maven:create-328085:4550986")
    runtimeOnly fg.deobf("curse.maven:cofh-core-69162:4385215")
    runtimeOnly fg.deobf("curse.maven:vault-integrations-867003:4641741")
    runtimeOnly fg.deobf("curse.maven:applied-energistics-2-223794:4136407")
    runtimeOnly fg.deobf("curse.maven:modular-routers-250294:4984984")
    runtimeOnly fg.deobf("curse.maven:just-enough-vh-1035310:5928262")
}

afterEvaluate {
    tasks.configureReobfTaskForReobfJar.mustRunAfter(tasks.compileJava)
    tasks.configureReobfTaskForReobfJarJar.mustRunAfter(tasks.compileJava)
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes([
                "Specification-Title"     : "${mod_id}",
                "Specification-Vendor"    : "attackeight_dev",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "attackeight_dev",
                'MixinConfigs': "${mod_id}.mixins.json",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
// publish.dependsOn('reobfJar')

